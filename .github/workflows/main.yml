name: Node.js Backend CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Verify project structure
      run: |
        echo "🔍 Verificando estructura del proyecto..."
        [ -f "index.js" ] && echo "✅ index.js existe" || exit 1
        [ -f "package.json" ] && echo "✅ package.json existe" || exit 1
        [ -d "controllers" ] && echo "✅ controllers/ existe" || exit 1
        [ -d "models" ] && echo "✅ models/ existe" || exit 1
        [ -d "routes" ] && echo "✅ routes/ existe" || exit 1
        echo "🎉 Estructura del proyecto OK!"
    
    - name: Check JavaScript syntax
      run: |
        echo "📝 Verificando sintaxis JavaScript..."
        node -c index.js
        find controllers/ -name "*.js" -exec node -c {} \;
        find models/ -name "*.js" -exec node -c {} \;
        find routes/ -name "*.js" -exec node -c {} \;
        echo "✅ Sintaxis JavaScript OK!"
    
    - name: Test MongoDB connection
      run: |
        echo "🗄️ Probando conexión a MongoDB..."
        node -e "
        const mongoose = require('mongoose');
        mongoose.connect('mongodb://localhost:27017/test_casanova', {
          useNewUrlParser: true,
          useUnifiedTopology: true,
          serverSelectionTimeoutMS: 3000
        })
        .then(() => {
          console.log('✅ MongoDB conectado exitosamente');
          process.exit(0);
        })
        .catch(err => {
          console.error('❌ Error conectando a MongoDB:', err.message);
          process.exit(1);
        });
        "
    
    - name: Security audit
      run: npm audit --audit-level moderate

  deployment-package:
    runs-on: ubuntu-latest
    needs: test-backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment package
      run: |
        echo "📦 Creando paquete de deployment..."
        mkdir -p deployment
        cp -r controllers models routes config *.js package.json deployment/
        echo "✅ Paquete creado exitosamente"
        
    - name: Show package contents
      run: |
        echo "📁 Contenido del paquete:"
        find deployment -type f -name "*.js" | head -10
